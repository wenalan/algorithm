// leetcode

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1 == null && l2 == null) return null;
        if (l1 == null) return l2;
        if (l2 == null) return l1;
        
        ListNode dummy = new ListNode(0);
        ListNode curr = dummy;
        int carry = 0;
        while (l1 != null && l2 != null) {
            int val = l1.val + l2.val + carry;
            carry = val / 10;
            curr.next = new ListNode(val % 10);
            curr = curr.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        
        while (l1 != null) {
            int val = l1.val + carry;
            carry = val / 10;
            curr.next = new ListNode(val % 10);
            curr = curr.next;
            l1 = l1.next;
        }
        
        while (l2 != null) {
            int val = l2.val + carry;
            carry = val / 10;
            curr.next = new ListNode(val % 10);
            curr = curr.next;
            l2 = l2.next;
        }
        
        if (carry == 1) {
            curr.next = new ListNode(carry);
        }
        
        return dummy.next;
    }
}
