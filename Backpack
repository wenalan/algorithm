public class Solution {
    /**
     * @param m: An integer m denotes the size of a backpack
     * @param A: Given n items with size A[i]
     * @return: The maximum size
     */
    public int backPack(int m, int[] A) {
        // write your code here
        if (m <= 0) return 0;
        if (A == null || A.length == 0) return 0;
        
        int[][] dp = new int[A.length][m + 1];
        for (int i = 0; i < A.length; i++) {
            dp[i][0] = 0;
        }
        for (int i = 1; i <= m; i++) {
            if (i >= A[0]) dp[0][i] = A[0];
        }
        
        for (int i = 1; i < A.length; i++) {
            for (int j = 1; j <= m; j++) {
                if (j < A[i]) {
                    dp[i][j] = dp[i - 1][j];
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], A[i] + dp[i - 1][j - A[i]]);
                }
            }
        }
        return dp[A.length - 1][m];
    }
}
