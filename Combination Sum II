public class Solution {
    /**
     * @param num: Given the candidate numbers
     * @param target: Given the target number
     * @return: All the combinations that sum to target
     */
    public List<List<Integer>> combinationSum2(int[] num, int target) {
        // write your code here
        List<List<Integer>> res = new ArrayList<>();
        if (num == null || num.length == 0) return res;
        
        Arrays.sort(num);
        List<Integer> line = new ArrayList<>();
        combSum2(num, target, 0, line, res);
        return res;
    }
    
    public void combSum2(int[] num, int t, int pos, List<Integer> line,
            List<List<Integer>> res) {
        if (t < 0) return;
        
        if (t == 0) {
            res.add(new ArrayList<Integer>(line));
            return;
        }
        
        int prev = -1;
        for (int i = pos; i < num.length; i++) {
            if (prev != -1 && prev == num[i]) continue;
            
            line.add(num[i]);
            // only difference from Combination Sum I is
            // change i to i + 1
            combSum2(num, t - num[i], i + 1, line, res);
            line.remove(line.size() - 1);
            
            prev = num[i];
        }
     }
}
