public class Solution {
    /**
     * @param A an integer array
     * @param target an integer
     * @param k a non-negative integer
     * @return an integer array
     */
    public int[] kClosestNumbers(int[] A, int target, int k) {
        // Write your code here
        if (k < 0 || k > A.length) return null;
        
        int[] res = new int[k];
        // can skip k == 0 here, which will skip the for loop
        // and still provide the correct answer
        if (k == 0 || A == null || A.length == 0) return res;
        
        int start = 0, end = A.length - 1;
        while (start + 1 < end) {
            int mid = start + (end - start) / 2;
            if (target <= A[mid]) {
                end = mid;
            } else {
                start = mid;
            }
        }
        
        for (int i = 0; i < k; i++) {
            int deltaStart = start >= 0 ? target - A[start] : Integer.MAX_VALUE;
            int deltaEnd = end < A.length ? A[end] - target : Integer.MAX_VALUE;

            // must use <=, as it is required to use smaller number
            // if they have the same difference
            if (deltaStart <= deltaEnd) {
                res[i] = A[start--];
            } else {
                res[i] = A[end++];
            }
        }
        return res;
    }
}
