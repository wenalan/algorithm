public class Solution {
    /**
     * @param nums: The integer array
     * @return: The length of LIS (longest increasing subsequence)
     */
    public int longestIncreasingSubsequence(int[] nums) {
        // write your code here
        if (nums == null || nums.length == 0) return 0;
        
        int[] dp = new int[nums.length];
        for (int i = 0; i < nums.length; i++) dp[i] = 1;
        for (int i = 1; i < nums.length; i++) {
            for (int j = 0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    dp[i] = Math.max(dp[i], dp[j] + 1);
                }
            }
        }
        int lis = 0;
        for (int i = 0; i < dp.length; i++) {
            lis = Math.max(lis, dp[i]);
        }
        return lis;
    }
}
