// easy remember

public class Solution {
    /**
     * @param nums: A list of integers
     * @return: The majority number that occurs more than 1/3
     */
    public int majorityNumber(ArrayList<Integer> nums) {
        // write your code
        if (nums == null || nums.size() < 3) return -1;
        
        int k1, k2, c1, c2;
        k1 = k2 = c1 = c2 = 0;
        for (Integer n : nums) {
            if (c1 == 0) {
                k1 = n;
            } else if (c2 == 0) {
                k2 = n;
            }
            
            if (k1 == n) {
                c1++;
            } else if (k2 == n) {
                c2++;
            } else {
                c1--;
                c2--;
            }
        }
        
        // must re-caculate the counts
        c1 = c2 = 0;
        for (Integer n : nums) {
            if (k1 == n) c1++;
            if (k2 == n) c2++;
        }
        return c1 > c2 ? k1 : k2;
    }
}

// less code
public class Solution {
    /**
     * @param nums: A list of integers
     * @return: The majority number that occurs more than 1/3
     */
    public int majorityNumber(ArrayList<Integer> nums) {
        // write your code
        if (nums == null || nums.size() < 3) return -1;
        
        int k1, k2, c1, c2;
        k1 = k2 = c1 = c2 = 0;
        for (Integer n : nums) {
            if (c1 == 0 || k1 == n) {
                k1 = n;
                c1++;
            } else if (c2 == 0 || k2 == n) {
                k2 = n;
                c2++;
            } else {
                c1--;
                c2--;
            }
        }
        
        c1 = c2 = 0;
        for (Integer n : nums) {
            if (k1 == n) c1++;
            if (k2 == n) c2++;
        }
        return c1 > c2 ? k1 : k2;
    }
}


