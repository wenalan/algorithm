//================================
// Java
//================================

public class Solution {
    /**
     * @param nums: A list of integers
     * @return: A integer indicate the sum of max subarray
     */
    public int maxSubArray(int[] nums) {
        // write your code
        if (nums == null || nums.length == 0) return 0;
        
        int sum = 0, maxSum = Integer.MIN_VALUE;
        for (int i : nums) {
            sum += i;
            maxSum = Math.max(maxSum, sum);
            if (sum < 0) sum = 0;
        }
        return maxSum;
    }
}


//================================
// C++
//================================

class Solution {
public:    
    /**
     * @param nums: A list of integers
     * @return: A integer indicate the sum of max subarray
     */
    int maxSubArray(vector<int> nums) {
        // write your code here
        if (nums.empty()) return 0;
        
        int max_sum = INT_MIN;
        int sum = 0;
        
        for (auto n : nums) {
            sum += n;
            max_sum = max(max_sum, sum);
            if (sum < 0) sum = 0;
        }
        return max_sum;
    }
};
