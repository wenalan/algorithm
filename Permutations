class Solution {
    /**
     * @param nums: A list of integers.
     * @return: A list of permutations.
     */
    public List<List<Integer>> permute(int[] nums) {
        // write your code here
        List<List<Integer>> res = new ArrayList<>();
        if (nums == null) return res;
        
        if (nums.length == 0) {
            res.add(new ArrayList<Integer>());
            return res;
        }
        
        List<Integer> line = new ArrayList<>();
        HashSet<Integer> hash = new HashSet<>();
        permute(nums, hash, line, res);
        return res;
    }
    
    public void permute(int[] nums, HashSet<Integer> hash,
            List<Integer> line, List<List<Integer>> res) {
        if (line.size() == nums.length) {
            res.add(new ArrayList<>(line));
            return;
        }
        
        for (int i = 0; i < nums.length; i++) {
            if (hash.contains(nums[i])) continue;
            
            line.add(nums[i]);
            hash.add(nums[i]);
            permute(nums, hash, line, res);
            line.remove(line.size() - 1);
            hash.remove(nums[i]);
        }
    }
}
