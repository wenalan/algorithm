// pay attention on every possible cases
// strt with abc...
// start with -
// start with +-
// 010
// overflow

class Solution {
public:
    int myAtoi(string str) {
        bool leading = true;
        long long res = 0;
        int sign = 1;
        bool singleSign = true;
        for (auto c : str) {
            if (leading) {
                if (c == ' ' || c == '\t') continue;
                if (c == '+') {
                    if (singleSign) {
                        singleSign = false;
                        leading = false;
                        continue;
                    } else {
                        return 0;
                    }
                }
                if (c == '-') { 
                    if (singleSign) {
                        singleSign = false;
                        leading = false;
                        sign = -1;
                        continue;
                    } else {
                        return 0;
                    }
                }
                if (c < '0' || c > '9') {
                    return 0;
                } else {
                    leading = false;
                    res = c - '0';
                }
            } else {
                if (c >= '0' && c <= '9') {
                    res *= 10;
                    res += c - '0';
                    
                    // check if overflow
                    // INT_MAX + 1 is the smallest value in INT
                    if (res * sign < INT_MAX + 1) return INT_MAX + 1;
                    else if (res * sign > INT_MAX) return INT_MAX;
                } else {
                    return res * sign;
                }
            }
        }
        return res * sign;
    }
};
